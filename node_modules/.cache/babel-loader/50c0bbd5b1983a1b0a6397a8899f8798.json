{"ast":null,"code":"var _jsxFileName = \"/Users/laureagrech/Desktop/Projet/SheCodes/react-weather-app-forecast/src/WeatherForecast.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  function load() {\n    let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"WeatherForecast\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, forecast.map(function (dailyForecast, index) {\n      if (index < 5) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(WeatherForecastDay, {\n          data: dailyForecast,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }\n        }));\n      } else {\n        return null;\n      }\n    })));\n  } else {\n    load();\n    return null;\n  }\n}","map":{"version":3,"sources":["/Users/laureagrech/Desktop/Projet/SheCodes/react-weather-app-forecast/src/WeatherForecast.js"],"names":["React","useState","useEffect","axios","WeatherForecastDay","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","data","daily","load","apiKey","longitude","lon","latitude","lat","apiUrl","get","then","map","dailyForecast","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,uBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;AAIA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCH,IAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASQ,IAAT,GAAgB;AACd,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,SAAS,GAAGZ,KAAK,CAACK,WAAN,CAAkBQ,GAAlC;AACA,QAAIC,QAAQ,GAAGd,KAAK,CAACK,WAAN,CAAkBU,GAAjC;AACA,QAAIC,MAAM,GAAI,uDAAsDF,QAAS,QAAOF,SAAU,UAASD,MAAO,eAA9G;AAEAd,IAAAA,KAAK,CAACoB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBZ,cAAvB;AACD;;AAED,MAAIL,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,QAAQ,CAACgB,GAAT,CAAa,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;AAC5C,UAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,4BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,GAAG,EAAEA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,kBAAD;AAAoB,UAAA,IAAI,EAAED,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OAND,MAMO;AACL,eAAO,IAAP;AACD;AACF,KAVA,CADH,CADF,CADF;AAiBD,GAlBD,MAkBO;AACLV,IAAAA,IAAI;AAEJ,WAAO,IAAP;AACD;AACF","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  function load() {\n    let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"WeatherForecast\">\n        <div className=\"row\">\n          {forecast.map(function (dailyForecast, index) {\n            if (index < 5) {\n              return (\n                <div className=\"col\" key={index}>\n                  <WeatherForecastDay data={dailyForecast} />\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    load();\n\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}